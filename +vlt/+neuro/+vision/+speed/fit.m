function P = fit(SF,TF,R)
% vlt.neuro.speed.fit Fit two-dimensional Gaussian function to data set
%
%  P = vlt.neuro.vision.speed.fit(SF,TF,R)
%
%  Fit a Gaussian to a set of responses generated by a speed tuning curve.
%
%  Inputs:
%    SF is an array of spatial frequency values
%    TF is an array of temporal frequency values
%    R is an array of measured responses driven by the spatial and
%    temporal frequency values
%
%  Outputs:
%    P is an array with parameters:
%    ---------------------------------------------
%    | A         | Peak response of the neuron   |
%    |           |                               |
%    | zeta      | Skew of the temporal          |
%    |           | frequency tuning curve        |
%    |           |                               |
%    | xi        | Speed parameter               |
%    |           |                               |
%    | sigma_sf  | Tuning width of the neuron    |
%    |           | for spatial frequency         |
%    |           |                               |
%    | sigma_tf  | Tuning width of the neuron    |
%    |           | for temporal frequency        |
%    |           |                               |
%    | sf0       | Preferred spatial frequency   |
%    |           | averaged across temporal      |
%    |           | frequencies                   |
%    |           |                               |
%    | tf0       | Preferred temporal frequency  |
%    |           | averaged across spatial       |
%    |           | frequencies                   |
%    ---------------------------------------------
%
%  See: Priebe et al. 2006
%
%  By Noah Lasky-Nielson
%

SF = SF(:); TF = TF(:); R = R(:); % Make them column vectors

% Define constraints on the fit
Upper = [2*max(R); 3; 1; 4; 4; max(SF); max(TF)];
Lower = [0; -3; 0; 0.1; 0.1; min(SF); min(SF)];
StartPoint = [2; 1; 0.6; 3.2; 1.4; 2.8; 3.1]; % Arbitrarily chosen
% Use lsqcurvefit
P = lsqcurvefit(@(P,SF) vlt.neuro.vision.speed.tuningfunc(SF,TF,P),StartPoint,SF,R,Lower,Upper);
